

name: CICD Githubactions

on:
  push:
    branches: [ "main" ]
    
jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Install Maven
      run: sudo apt-get update && sudo apt-get install -y maven
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  security-checks:

    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4

    - name: Trivy Installation
      run: |
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Verify Trivy Installed
      run: which trivy

    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json . || true

    - name: Gitleaks installation
      run: sudo apt install -y gitleaks

    - name: Verify Gitleaks Installed
      run: which gitleaks

    - name: Gitleaks code scan
      run: gitleaks detect -s . -r gitleaks-report.json -f json || true

  test:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Unit Test Cases
      run: mvn test

  buid_project_and_sonar_scan:

    runs-on: self-hosted
    needs: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: build project
      run: mvn package

    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
          pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

  buid_docker_image_and_push:

    runs-on: self-hosted
    needs: buid_project_and_sonar_scan

    steps:
    - uses: actions/checkout@v4
    - name: download JAR artifact
      uses: actions/download-artifacts@v4
      with:
        name: target
        path: target

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
          push: true
          tags: harshad6989/boardgame1:latest

      
    


   
